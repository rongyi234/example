mybatis:
  configuration:
    lazyLoadingEnabled: true
  type-aliases-package: com.rong.example.mapper
  mapperLocations:
  - classpath*:mybatis/xml/**/*Mapper.xml


server:
  port: 8080
  tomcat:
    accesslog:
      enabled: false

spring:
  aop:
    proxy-target-class: true
  application:
    name: example
  datasource:
    username: cams_charge
    password: mz8j0jBbMq
    url: jdbc:mysql://rm-bp1dgp08njl84sbdrqo.mysql.rds.aliyuncs.com:3306/cams_charge?useUnicode=true&characterEncoding=UTF-8
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: dev
  redis:
    host: r-bp1fq7ky86jpzmz88kpd.redis.rds.aliyuncs.com
    password: 5W4k3j3XtT
    port: 6379
    database: 9
    timeout: 5000
  cache:
    redis:
      time-to-live: 30s
      cacheNullValues: false
  kafka:
    bootstrap-servers: 47.111.128.244:9092
    producer:
      #每批次发送消息的数量
      batch-size: 16
      #设置大于0的值将使客户端重新发送任何数据，一旦这些数据发送失败。注意，这些重试与客户端接收到发送错误时的重试没有什么不同。允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，则第一个消息失败第二个发送成功，则第二条消息会比第一条消息出现要早。
      retries: 0
      #producer可以用来缓存数据的内存大小。如果数据产生速度大于向broker发送的速度，producer会阻塞或者抛出异常，以“block.on.buffer.full”来表明。这项设置将和producer能够使用的总内存相关，但并不是一个硬性的限制，因为不是producer使用的所有内存都是用于缓存。一些额外的内存会用于压缩（如果引入压缩机制），同样还有一些用于维护请求。
      buffer-memory: 33554432
      #key序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      #Kafka中没有初始偏移或如果当前偏移在服务器上不再存在时,默认区最新 ，有三个选项 【latest, earliest, none】
      auto-offset-reset: latest
      #是否开启自动提交
      enable-auto-commit: true
      #自动提交的时间间隔
      auto-commit-interval: 100
      #key的解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #value的解码方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #在/usr/local/etc/kafka/consumer.properties中有配置
      group-id: example_test

 
logging:
  config: classpath:log-${spring.profiles.active}.xml

task:
  ExampleTask: 0/30 * * * * ?

feign:
  service:
    sale:
      name: sale
      url: 47.111.208.192:8006
    crm:
      name: crm
      url: http://xxx.com



